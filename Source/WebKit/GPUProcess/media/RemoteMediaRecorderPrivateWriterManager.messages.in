# Copyright (C) 2024 Apple Inc. All rights reserved.
#
# Redistribution and use in source and binary forms, with or without
# modification, are permitted provided that the following conditions
# are met:
# 1. Redistributions of source code must retain the above copyright
#    notice, this list of conditions and the following disclaimer.
# 2. Redistributions in binary form must reproduce the above copyright
#    notice, this list of conditions and the following disclaimer in the
#    documentation and/or other materials provided with the distribution.
#
# THIS SOFTWARE IS PROVIDED BY APPLE INC. AND ITS CONTRIBUTORS ``AS IS''
# AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO,
# THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR
# PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL APPLE INC. OR ITS CONTRIBUTORS
# BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR
# CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF
# SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS
# INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN
# CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
# ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF
# THE POSSIBILITY OF SUCH DAMAGE.

#if ENABLE(GPU_PROCESS) && PLATFORM(COCOA) && ENABLE(MEDIA_RECORDER)

[EnabledBy=MediaRecorderEnabled]
messages -> RemoteMediaRecorderPrivateWriterManager {
    Create(WebKit::RemoteMediaRecorderPrivateWriterIdentifier identifier, String type)
    AddAudioTrack(WebKit::RemoteMediaRecorderPrivateWriterIdentifier identifier, struct WebKit::RemoteAudioInfo trackInfo) -> (std::optional<uint8_t> trackNumber) Synchronous
    AddVideoTrack(WebKit::RemoteMediaRecorderPrivateWriterIdentifier identifier, struct WebKit::RemoteVideoInfo trackInfo, std::optional<CGAffineTransform> transform) -> (std::optional<uint8_t> trackNumber) Synchronous
    AllTracksAdded(WebKit::RemoteMediaRecorderPrivateWriterIdentifier identifier) -> (bool success) Synchronous
    WriteFrames(WebKit::RemoteMediaRecorderPrivateWriterIdentifier identifier, Vector<std::pair<WebCore::TrackInfo::TrackType, Vector<WebCore::MediaSamplesBlock::MediaSampleItem>>> frames, MediaTime endTime) -> (Expected<Ref<WebCore::SharedBuffer>, WebCore::MediaRecorderPrivateWriter::Result> data)
    Close(WebKit::RemoteMediaRecorderPrivateWriterIdentifier identifier) -> (RefPtr<WebCore::SharedBuffer> data)
};

#endif
