
FAIL Function constructor with mixed plain and trusted strings, mask #0 assert_throws_js: function "_ => new_function_with_maybe_trusted_args(mask, "Function")" did not throw
FAIL AsyncFunction constructor with mixed plain and trusted strings, mask #0 assert_throws_js: function "_ => new_function_with_maybe_trusted_args(mask, "AsyncFunction")" did not throw
FAIL GeneratorFunction constructor with mixed plain and trusted strings, mask #0 assert_throws_js: function "_ => new_function_with_maybe_trusted_args(mask, "GeneratorFunction")" did not throw
FAIL AsyncGeneratorFunction constructor with mixed plain and trusted strings, mask #0 assert_throws_js: function "_ => new_function_with_maybe_trusted_args(mask, "AsyncGeneratorFunction")" did not throw
FAIL Function constructor with mixed plain and trusted strings, mask #1 assert_throws_js: function "_ => new_function_with_maybe_trusted_args(mask, "Function")" did not throw
FAIL AsyncFunction constructor with mixed plain and trusted strings, mask #1 assert_throws_js: function "_ => new_function_with_maybe_trusted_args(mask, "AsyncFunction")" did not throw
FAIL GeneratorFunction constructor with mixed plain and trusted strings, mask #1 assert_throws_js: function "_ => new_function_with_maybe_trusted_args(mask, "GeneratorFunction")" did not throw
FAIL AsyncGeneratorFunction constructor with mixed plain and trusted strings, mask #1 assert_throws_js: function "_ => new_function_with_maybe_trusted_args(mask, "AsyncGeneratorFunction")" did not throw
FAIL Function constructor with mixed plain and trusted strings, mask #2 assert_throws_js: function "_ => new_function_with_maybe_trusted_args(mask, "Function")" did not throw
FAIL AsyncFunction constructor with mixed plain and trusted strings, mask #2 assert_throws_js: function "_ => new_function_with_maybe_trusted_args(mask, "AsyncFunction")" did not throw
FAIL GeneratorFunction constructor with mixed plain and trusted strings, mask #2 assert_throws_js: function "_ => new_function_with_maybe_trusted_args(mask, "GeneratorFunction")" did not throw
FAIL AsyncGeneratorFunction constructor with mixed plain and trusted strings, mask #2 assert_throws_js: function "_ => new_function_with_maybe_trusted_args(mask, "AsyncGeneratorFunction")" did not throw
FAIL Function constructor with mixed plain and trusted strings, mask #3 assert_throws_js: function "_ => new_function_with_maybe_trusted_args(mask, "Function")" did not throw
FAIL AsyncFunction constructor with mixed plain and trusted strings, mask #3 assert_throws_js: function "_ => new_function_with_maybe_trusted_args(mask, "AsyncFunction")" did not throw
FAIL GeneratorFunction constructor with mixed plain and trusted strings, mask #3 assert_throws_js: function "_ => new_function_with_maybe_trusted_args(mask, "GeneratorFunction")" did not throw
FAIL AsyncGeneratorFunction constructor with mixed plain and trusted strings, mask #3 assert_throws_js: function "_ => new_function_with_maybe_trusted_args(mask, "AsyncGeneratorFunction")" did not throw
FAIL Function constructor with mixed plain and trusted strings, mask #4 assert_throws_js: function "_ => new_function_with_maybe_trusted_args(mask, "Function")" did not throw
FAIL AsyncFunction constructor with mixed plain and trusted strings, mask #4 assert_throws_js: function "_ => new_function_with_maybe_trusted_args(mask, "AsyncFunction")" did not throw
FAIL GeneratorFunction constructor with mixed plain and trusted strings, mask #4 assert_throws_js: function "_ => new_function_with_maybe_trusted_args(mask, "GeneratorFunction")" did not throw
FAIL AsyncGeneratorFunction constructor with mixed plain and trusted strings, mask #4 assert_throws_js: function "_ => new_function_with_maybe_trusted_args(mask, "AsyncGeneratorFunction")" did not throw
FAIL Function constructor with mixed plain and trusted strings, mask #5 assert_throws_js: function "_ => new_function_with_maybe_trusted_args(mask, "Function")" did not throw
FAIL AsyncFunction constructor with mixed plain and trusted strings, mask #5 assert_throws_js: function "_ => new_function_with_maybe_trusted_args(mask, "AsyncFunction")" did not throw
FAIL GeneratorFunction constructor with mixed plain and trusted strings, mask #5 assert_throws_js: function "_ => new_function_with_maybe_trusted_args(mask, "GeneratorFunction")" did not throw
FAIL AsyncGeneratorFunction constructor with mixed plain and trusted strings, mask #5 assert_throws_js: function "_ => new_function_with_maybe_trusted_args(mask, "AsyncGeneratorFunction")" did not throw
FAIL Function constructor with mixed plain and trusted strings, mask #6 assert_throws_js: function "_ => new_function_with_maybe_trusted_args(mask, "Function")" did not throw
FAIL AsyncFunction constructor with mixed plain and trusted strings, mask #6 assert_throws_js: function "_ => new_function_with_maybe_trusted_args(mask, "AsyncFunction")" did not throw
FAIL GeneratorFunction constructor with mixed plain and trusted strings, mask #6 assert_throws_js: function "_ => new_function_with_maybe_trusted_args(mask, "GeneratorFunction")" did not throw
FAIL AsyncGeneratorFunction constructor with mixed plain and trusted strings, mask #6 assert_throws_js: function "_ => new_function_with_maybe_trusted_args(mask, "AsyncGeneratorFunction")" did not throw
FAIL Function constructor with mixed plain and trusted strings, mask #7 assert_throws_js: function "_ => new_function_with_maybe_trusted_args(mask, "Function")" did not throw
FAIL AsyncFunction constructor with mixed plain and trusted strings, mask #7 assert_throws_js: function "_ => new_function_with_maybe_trusted_args(mask, "AsyncFunction")" did not throw
FAIL GeneratorFunction constructor with mixed plain and trusted strings, mask #7 assert_throws_js: function "_ => new_function_with_maybe_trusted_args(mask, "GeneratorFunction")" did not throw
FAIL AsyncGeneratorFunction constructor with mixed plain and trusted strings, mask #7 assert_throws_js: function "_ => new_function_with_maybe_trusted_args(mask, "AsyncGeneratorFunction")" did not throw
FAIL Function constructor with mixed plain and trusted strings, mask #8 assert_throws_js: function "_ => new_function_with_maybe_trusted_args(mask, "Function")" did not throw
FAIL AsyncFunction constructor with mixed plain and trusted strings, mask #8 assert_throws_js: function "_ => new_function_with_maybe_trusted_args(mask, "AsyncFunction")" did not throw
FAIL GeneratorFunction constructor with mixed plain and trusted strings, mask #8 assert_throws_js: function "_ => new_function_with_maybe_trusted_args(mask, "GeneratorFunction")" did not throw
FAIL AsyncGeneratorFunction constructor with mixed plain and trusted strings, mask #8 assert_throws_js: function "_ => new_function_with_maybe_trusted_args(mask, "AsyncGeneratorFunction")" did not throw
FAIL Function constructor with mixed plain and trusted strings, mask #9 assert_throws_js: function "_ => new_function_with_maybe_trusted_args(mask, "Function")" did not throw
FAIL AsyncFunction constructor with mixed plain and trusted strings, mask #9 assert_throws_js: function "_ => new_function_with_maybe_trusted_args(mask, "AsyncFunction")" did not throw
FAIL GeneratorFunction constructor with mixed plain and trusted strings, mask #9 assert_throws_js: function "_ => new_function_with_maybe_trusted_args(mask, "GeneratorFunction")" did not throw
FAIL AsyncGeneratorFunction constructor with mixed plain and trusted strings, mask #9 assert_throws_js: function "_ => new_function_with_maybe_trusted_args(mask, "AsyncGeneratorFunction")" did not throw
FAIL Function constructor with mixed plain and trusted strings, mask #10 assert_throws_js: function "_ => new_function_with_maybe_trusted_args(mask, "Function")" did not throw
FAIL AsyncFunction constructor with mixed plain and trusted strings, mask #10 assert_throws_js: function "_ => new_function_with_maybe_trusted_args(mask, "AsyncFunction")" did not throw
FAIL GeneratorFunction constructor with mixed plain and trusted strings, mask #10 assert_throws_js: function "_ => new_function_with_maybe_trusted_args(mask, "GeneratorFunction")" did not throw
FAIL AsyncGeneratorFunction constructor with mixed plain and trusted strings, mask #10 assert_throws_js: function "_ => new_function_with_maybe_trusted_args(mask, "AsyncGeneratorFunction")" did not throw
FAIL Function constructor with mixed plain and trusted strings, mask #11 assert_throws_js: function "_ => new_function_with_maybe_trusted_args(mask, "Function")" did not throw
FAIL AsyncFunction constructor with mixed plain and trusted strings, mask #11 assert_throws_js: function "_ => new_function_with_maybe_trusted_args(mask, "AsyncFunction")" did not throw
FAIL GeneratorFunction constructor with mixed plain and trusted strings, mask #11 assert_throws_js: function "_ => new_function_with_maybe_trusted_args(mask, "GeneratorFunction")" did not throw
FAIL AsyncGeneratorFunction constructor with mixed plain and trusted strings, mask #11 assert_throws_js: function "_ => new_function_with_maybe_trusted_args(mask, "AsyncGeneratorFunction")" did not throw
FAIL Function constructor with mixed plain and trusted strings, mask #12 assert_throws_js: function "_ => new_function_with_maybe_trusted_args(mask, "Function")" did not throw
FAIL AsyncFunction constructor with mixed plain and trusted strings, mask #12 assert_throws_js: function "_ => new_function_with_maybe_trusted_args(mask, "AsyncFunction")" did not throw
FAIL GeneratorFunction constructor with mixed plain and trusted strings, mask #12 assert_throws_js: function "_ => new_function_with_maybe_trusted_args(mask, "GeneratorFunction")" did not throw
FAIL AsyncGeneratorFunction constructor with mixed plain and trusted strings, mask #12 assert_throws_js: function "_ => new_function_with_maybe_trusted_args(mask, "AsyncGeneratorFunction")" did not throw
FAIL Function constructor with mixed plain and trusted strings, mask #13 assert_throws_js: function "_ => new_function_with_maybe_trusted_args(mask, "Function")" did not throw
FAIL AsyncFunction constructor with mixed plain and trusted strings, mask #13 assert_throws_js: function "_ => new_function_with_maybe_trusted_args(mask, "AsyncFunction")" did not throw
FAIL GeneratorFunction constructor with mixed plain and trusted strings, mask #13 assert_throws_js: function "_ => new_function_with_maybe_trusted_args(mask, "GeneratorFunction")" did not throw
FAIL AsyncGeneratorFunction constructor with mixed plain and trusted strings, mask #13 assert_throws_js: function "_ => new_function_with_maybe_trusted_args(mask, "AsyncGeneratorFunction")" did not throw
FAIL Function constructor with mixed plain and trusted strings, mask #14 assert_throws_js: function "_ => new_function_with_maybe_trusted_args(mask, "Function")" did not throw
FAIL AsyncFunction constructor with mixed plain and trusted strings, mask #14 assert_throws_js: function "_ => new_function_with_maybe_trusted_args(mask, "AsyncFunction")" did not throw
FAIL GeneratorFunction constructor with mixed plain and trusted strings, mask #14 assert_throws_js: function "_ => new_function_with_maybe_trusted_args(mask, "GeneratorFunction")" did not throw
FAIL AsyncGeneratorFunction constructor with mixed plain and trusted strings, mask #14 assert_throws_js: function "_ => new_function_with_maybe_trusted_args(mask, "AsyncGeneratorFunction")" did not throw
PASS Function constructor with mixed plain and trusted strings, mask #15
FAIL Function constructor with trusted strings, and a forged toString() for the one at index 0 assert_throws_js: function "_ => new Function(...mixed_args)" did not throw
FAIL Function constructor with trusted strings, and a forged toString() for the one at index 1 assert_throws_js: function "_ => new Function(...mixed_args)" did not throw
FAIL Function constructor with trusted strings, and a forged toString() for the one at index 2 assert_throws_js: function "_ => new Function(...mixed_args)" did not throw
FAIL Function constructor with trusted strings, and a forged toString() for the one at index 3 assert_throws_js: function "_ => new Function(...mixed_args)" did not throw

