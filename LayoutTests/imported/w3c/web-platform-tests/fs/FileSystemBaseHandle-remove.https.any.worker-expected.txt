
FAIL remove() to remove a file promise_test: Unhandled rejection with value: object "TypeError: writer.write is not a function. (In 'writer.write(new Blob([contents]))', 'writer.write' is undefined)"
FAIL remove() on an already removed file should fail promise_test: Unhandled rejection with value: object "InvalidStateError: The object is in an invalid state."
FAIL remove() to remove an empty directory promise_test: Unhandled rejection with value: object "TypeError: writer.write is not a function. (In 'writer.write(new Blob([contents]))', 'writer.write' is undefined)"
FAIL remove() on an already removed directory should fail promise_test: Unhandled rejection with value: object "TypeError: dir.remove is not a function. (In 'dir.remove()', 'dir.remove' is undefined)"
FAIL remove() on a non-empty directory should fail promise_test: Unhandled rejection with value: object "TypeError: dir.remove is not a function. (In 'dir.remove()', 'dir.remove' is undefined)"
FAIL remove() on a directory recursively should delete all sub-items promise_test: Unhandled rejection with value: object "InvalidStateError: The object is in an invalid state."
FAIL remove() on a file should ignore the recursive option promise_test: Unhandled rejection with value: object "InvalidStateError: The object is in an invalid state."
FAIL remove() while the file has an open writable fails promise_test: Unhandled rejection with value: object "InvalidStateError: The object is in an invalid state."
FAIL can remove the root of a sandbox file system promise_test: Unhandled rejection with value: object "TypeError: root.remove is not a function. (In 'root.remove()', 'root.remove' is undefined)"

